version: "3.8"

# The following variables define reusable configurations for deployment, providing consistent and predefined 
# behaviors for updating, rolling back, and restarting services.

x-deploy-default: &deploy-default
  update_config:
    failure_action: rollback
    parallelism: 1
    delay: 10s
  rollback_config:
    parallelism: 1
    delay: 10s
  restart_policy:
    window: 360s
    delay: 30s
    # Max 24hours
    max_attempts: 240

x-default: &default
  networks:
    - mna_network

services:
  reverse_proxy:
    <<: *default
    image: ghcr.io/mission-apprentissage/mna_reverse_proxy:{{reverse_proxy_version}}
    deploy:
      <<: *deploy-default
      restart_policy:
        window: 5s
        delay: 5s
      resources:
        limits:
          memory: 1g
      mode: global
    # Ingress port mode (default) is not able to provide user real-ip
    # In order to bypass this, we need to use mode host port mapping
    # But we cannot replicate the service on a single node
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    environment:
      - SERVER_NAME={{dns_name}}
      - MODSEC_REQ_BODY_LIMIT={{modsec_body_limit}}
      - MODSEC_REQ_BODY_NOFILES_LIMIT={{modsec_body_limit}}
      - MODSEC_RULE_ENGINE={{modsec_rule_engine}}
    volumes:
      - /opt/app/system/certbot/conf/:/etc/nginx/ssl/:ro
      - /opt/app/system/certbot/www/:/var/www/certbot/:ro
      - /opt/app/configs/reverse_proxy/locations/:/etc/nginx/templates/locations/:ro
      - /opt/app/configs/reverse_proxy/system/:/etc/nginx/system/:ro
      - /opt/app/configs/reverse_proxy/extra-conf.d/:/etc/nginx/templates/extra-conf.d/:ro
      - /opt/app/configs/reverse_proxy/owasp-crs/:/etc/modsecurity.d/owasp-crs/rules/:ro
      - /opt/app/configs/reverse_proxy/extra-includes/:/etc/nginx/templates/extra-includes/:ro
      - /opt/app/system/nginx/:/var/log/nginx/:rw
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: docker.nginx.{{product_name}}.{{env_type}}.nginx
        fluentd-async: "true"

  nodeexporter:
    <<: *default
    image: prom/node-exporter:v1.5.0
    hostname: {{host_name}}
    user: root
    deploy:
      <<: *deploy-default
      resources:
        limits:
          cpus: '0.50'
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/var/cron-exporter'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /opt/app/system/cron:/var/cron-exporter:rw

  cadvisor:
    <<: *default
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    deploy:
      <<: *deploy-default
      resources:
        limits:
          cpus: '0.50'
    hostname: {{host_name}}
    privileged: true
    devices:
      - /dev/kmsg
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro

  fluentd:
    <<: *default
    deploy:
      <<: *deploy-default
      resources:
        limits:
          cpus: '1.00'
    image: ghcr.io/mission-apprentissage/mna_fluentd:{{fluentd_version}}
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - fluentd:/var/log/fluent
      - /opt/app/system/nginx/:/var/log/nginx/:rw
      - /var/log/:/var/log/host/:rw
    environment:
      PRODUCT_NAME: "{{ product_name }}"
      ENV_TYPE: "{{ env_type }}"
      LOKI_URL: "https://monitoring-recette.apprentissage.beta.gouv.fr/loki"
      LOKI_USERNAME: "monitoring" 
      LOKI_PASSWORD: "{{ vault.MONITORING_PASSWORD }}" 

volumes:
  fluentd:

networks:
  mna_network:
    name: mna_network
    attachable: true
    external: true
    driver: overlay
